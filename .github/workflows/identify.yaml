name: Identify Merged Pull Request

on:
  push:
    branches:
      - main

jobs:
  find-merged-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Commit SHA
        id: get-sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Fetch Associated Pull Request
        id: fetch-pr
        run: |
          echo "Fetching pull request for commit ${{ env.sha }}"
          curl -s -H "Accept: application/vnd.github.groot-preview+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ env.sha }}/pulls" > pr.json
          cat pr.json

      - name: Get Reviews for PR
        id: get-reviews
        run: |
          PR_NUMBER=$(jq -r '.[0].number' pr.json)
          echo "Fetching reviews for PR #$PR_NUMBER"
          curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews" > reviews.json

      - name: Process Reviews
        id: process-reviews
        run: |
          APPROVED=$(jq -r '[.[] | select(.state == "APPROVED") | .user.login] | unique | join(", ")' reviews.json)
          NOT_APPROVED=$(jq -r '[.[] | select(.state != "APPROVED") | .user.login] | unique | join(", ")' reviews.json)

          echo "Approved Reviewers: $APPROVED"
          echo "Not Approved Reviewers: $NOT_APPROVED"
          echo "APPROVED=$APPROVED" >> $GITHUB_ENV
          echo "NOT_APPROVED=$NOT_APPROVED" >> $GITHUB_ENV

      - name: Display Reviewers
        run: |
          echo "The following reviewers approved the PR: ${{ env.APPROVED }}"
          echo "The following reviewers did not approve the PR: ${{ env.NOT_APPROVED }}"

      - name: Extract PR Author
        id: extract-pr-author
        run: |
          PR_AUTHOR=$(jq -r '.user.login' pr_details.json)
          echo "PR_AUTHOR=$PR_AUTHOR" >> $GITHUB_ENV

      - name: Display PR Author
        run: |
          echo "The PR author is: ${{ env.PR_AUTHOR }}"